services:

  db:
    image: postgres:16
    restart: always
    env_file: .env
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    shm_size: 128mb
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - backend

  redis:
    image: redis:alpine
    restart: always
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis-data:/data
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - backend

  django:
    build: ./django
    env_file: .env
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: always
    volumes:
      - static_data:/app/staticfiles
      - media_data:/app/media
      - gunicorn_socket:/run/gunicorn
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - backend

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_data:/static:ro
      - media_data:/media:ro
      - gunicorn_socket:/run/gunicorn:ro
    depends_on:
      - django
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - backend

  cups:
    build: ./cups
    restart: always
    ports:
      - "631:631"
    volumes:
      - ./cups/cupsd:/etc/cups
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - backend

volumes:
  static_data:
  media_data:
  gunicorn_socket:
  postgres-data:
  redis-data:

networks:
  backend:
